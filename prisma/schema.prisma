// prisma/schema.prisma
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = "postgresql://sinacofi:hola123@34.135.68.241:5432/rule"
}

model Schema {
  id          String      @id @default(uuid())
  messageCode String      @unique
  description String
  name        String
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  parameters  Parameter[]
  rules       Rule[]
}

model Parameter {
  id           String            @id @default(uuid())
  name         String            @unique
  schemaName   String
  label        String
  type         String
  placeholder  String
  description  String
  row          Int?
  column       Int?
  defaultValue String?
  priority     Int
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  schema       Schema     @relation(fields: [schemaName], references: [messageCode])
  rules        Rule[]
  optionValues ParameterOption[]
}

model OptionValue {
  id          String            @id @default(uuid())
  name        String            
  type        String
  description String
  value       String
  label       String
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  parameters  ParameterOption[]

  @@unique([name, type])
  @@index([name, type])
}

model Rule {
  id          String      @id @default(uuid())
  name        String      
  type        String
  description String
  condition   String
  value       String
  priority    Int
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  parameters  Parameter[]
  schema      Schema[]

  @@unique([name, type])
  @@index([name, type])
}

model ParameterOption {
  parameterName String
  optionName    String
  optionType    String

  optionValue OptionValue @relation(fields: [optionName, optionType], references: [name, type])
  parameter   Parameter   @relation(fields: [parameterName], references: [name])

  @@id([parameterName, optionName, optionType])
  @@index([parameterName, optionName, optionType])
}

