// prisma/schema.prisma
generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["relationJoins", "views"]
}

datasource db {
  provider = "postgresql"
  // url = env("DATABASE_URL")
  // url = "e"
  url = "postgresql://felipegarcia@localhost:5432/rules"
}

model Schema {
  id             String         @id @default(uuid())
  messageCode    String         @unique
  description    String
  name           String
  createdAt      DateTime       @default(now())
  updatedAt      DateTime       @updatedAt
  parameters     Parameter[]
  rules          RulesSchemas[]
  allowedActions ActionsSchemas[]

  @@index([messageCode])
}

model Parameter {
  id           String              @id @default(uuid())
  name         String
  messageCode  String
  label        String
  type         String
  placeholder  String
  description  String
  row          Int?
  column       Int?
  defaultValue String?
  priority     Int
  createdAt    DateTime            @default(now())
  updatedAt    DateTime            @updatedAt
  schema       Schema              @relation(fields: [messageCode], references: [messageCode])
  rules        RulesParameters[]
  optionValues ParametersOptions[]
  actions      ActionsParameters[]

  @@unique([name, messageCode, priority])
  @@index([name, messageCode, priority])
}

model OptionValue {
  id          String              @id @default(uuid())
  name        String
  type        String
  description String
  value       String
  label       String
  createdAt   DateTime            @default(now())
  updatedAt   DateTime            @updatedAt
  parameters  ParametersOptions[]

  @@unique([name, type])
  @@index([name, type])
}

model Rule {
  id             String            @id @default(uuid())
  name           String
  type           String
  category       String
  description    String
  condition      String
  value          String
  priority       Int
  createdAt      DateTime          @default(now())
  updatedAt      DateTime          @updatedAt
  parameters     RulesParameters[]
  schemas        RulesSchemas[]

  @@unique([name, type])
  @@index([name, type])
}

model Action {
  id          String @id @default(uuid())
  name        String
  type        String
  category    String
  action      String
  description String
  priority    Int
  value       Json      
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  parameters  ActionsParameters[]
  schemas     ActionsSchemas[]

  @@unique([name, type])
  @@index([name, type])
}

model ActionsSchemas {
  schemaMessageCode String
  actionName String
  actionType String

  schema Schema @relation(fields: [schemaMessageCode], references: [messageCode])
  action Action @relation(fields: [actionName, actionType], references: [name, type])

  @@id([schemaMessageCode, actionName, actionType])
  @@unique([schemaMessageCode, actionName, actionType])
}

model ActionsParameters {
  parameterName String
  parameterMessageCode String
  parameterPriority Int
  actionName String
  actionType String

  parameter Parameter @relation(fields: [parameterMessageCode, parameterName, parameterPriority], references: [name, messageCode, priority])
  action Action @relation(fields: [actionName, actionType], references: [name, type])

  @@unique([parameterMessageCode, parameterName, parameterPriority, actionName, actionType])
  @@index([parameterMessageCode, parameterName, parameterPriority, actionName, actionType])
}


model RulesSchemas {
  ruleName    String
  ruleType    String
  messageCode String

  rule   Rule   @relation(fields: [ruleName, ruleType], references: [name, type])
  schema Schema @relation(fields: [messageCode], references: [messageCode])

  @@id([ruleName, ruleType, messageCode])
  @@index([ruleName, ruleType, messageCode])
}

model RulesParameters {
  ruleName             String
  ruleType             String
  parameterName        String
  parameterMessageCode String
  parameterPriority    Int

  rule      Rule      @relation(fields: [ruleName, ruleType], references: [name, type])
  parameter Parameter @relation(fields: [parameterName, parameterMessageCode, parameterPriority], references: [name, messageCode, priority])

  @@id([ruleName, ruleType, parameterName, parameterMessageCode, parameterPriority])
  @@index([ruleName, ruleType, parameterName, parameterMessageCode, parameterPriority])
}

model ParametersOptions {
  parameterName        String
  parameterMessageCode String
  parameterPriority    Int
  optionName           String
  optionType           String

  optionValue OptionValue @relation(fields: [optionName, optionType], references: [name, type])
  parameter   Parameter   @relation(fields: [parameterName, parameterMessageCode, parameterPriority], references: [name, messageCode, priority])

  @@id([parameterName, parameterMessageCode, parameterPriority, optionName, optionType])
  @@index([parameterName, parameterMessageCode, parameterPriority, optionName, optionType])
}
